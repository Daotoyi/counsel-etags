* counsel-etags (v1.3.6)

Fast and complete Ctags solution using ivy-completion.

It's tested in huge projects like Linux Kernel source.

Usable even with *one million* candidates.

* Install
Place counsel-etags.el somewhere (say ~/.emacs/lisp), add below code into =.emacs=:

#+begin_src elisp
(add-to-list 'load-path "~/.emacs.d/lisp/")
(require 'counsel-etags)
#+end_src

* Usage
Run =M-x counsel-etags-find-tag-at-point= to navigate in code files without any setup.

This command will:
- find project root folder and scan code *automatically*
- find correct tag *automatically*
- if no tag is find, it runs =ripgrep= or =grep= *automatically*

That's it.

If you prefer manually setup tags file. You only need run =M-x counsel-etags-scan-code= once or create tags file in your own way.
* Tips (OPTIONAL)
** Ignore directories/files
You can setup =grep-find-ignored-directories= and =grep-find-ignored-files= to ignore directories/files,
#+begin_src elisp
(eval-after-load 'grep
  '(progn
     (dolist (v '("auto"
                  "target"
                  "node_modules"
                  "bower_components"
                  "*dist"
                  ".sass_cache"
                  ".cache"
                  ".npm"
                  "elpa"))
       (add-to-list 'grep-find-ignored-directories v))

     (dolist (v '("*.min.js"
                  "*.map"
                  "*.bundle.js"
                  "*.min.css"
                  "tags"
                  "TAGS"
                  "GTAGS"
                  "GRTAGS"
                  "GPATH"
                  "cscope.files"
                  "*.json"
                  "*.log"))
       (add-to-list 'grep-find-ignored-files v))))
#+end_src
** tags-file-name
We try to setup Emacs global variable =tags-file-name= if it's nil.

If it's not nil, we respect =tags-file-name=. Please note we don't support =tags-table-list=.
** Auto update tags file
#+begin_src elisp
;; Don't ask before rereading the TAGS files if they have changed
(setq tags-revert-without-query t)
;; Don't warn when TAGS files are large
(setq large-file-warning-threshold nil)
;; Setup auto update now
(add-hook 'prog-mode-hook
  (lambda ()
    (add-hook 'after-save-hook
              'counsel-etags-virtual-update-tags 'append 'local)))
#+end_src
You can change callback =counsel-etags-update-tags-backend= to update tags file using your own solution,
#+begin_src elisp
(setq counsel-etags-update-tags-backend (lambda () (shell-command "find . -type f -iname \"*.[ch]\" | etags -")))
#+end_src
** Fuzzy search tag
=M-x counsel-etags-find-tag=
** Open recent tag
=M-x counsel-etags-recent-tag=
** Ctags setup
Google "filetype:ctags site:github.com". Here is [[https://gist.github.com/redguardtoo/b12ddae3b8010a276e9b][mine]].

You may need configure environment variable "HOME" on Windows because Ctags looks for "%HOME%/.ctags" by default.
** Search with negative pattern
All counsel-etags commands supports negative pattern from [[https://github.com/abo-abo/swiper][ivy]].

You can filter the candidates with =keyword1 !keyword2 keyword3=. So we display only candidate containing =keyword1= but neither =keyword2= nor =keyword3=.

You can also press =C-c C-o= to create a buffer containing all candidates.

In summary, all functionalities from powerful [[https://github.com/abo-abo/swiper][ivy]] are supported perfectly.
** Grep program
If [[https://github.com/BurntSushi/ripgrep][ripgrep]] is installed, it's used as faster grep program. Or else we fallback to =grep=.

You can use =M-x counsel-etags-grep= or =M-x counsel-etags-grep-symbol-at-point= to grep in current project.
** Windows
No extra setup is needed if you install Cygwin to its default location on any driver. Or else, you could setup =counsel-etags-find-program=, =counsel-etags-tags-program=, and =counsel-etags-grep-program=.
* Bug Report
Check [[https://github.com/redguardtoo/counsel-etags]].
